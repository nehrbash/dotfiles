#
### Variables
#
set $mod Mod4
# Home row direction keys, like vim
set $left m
set $down n
set $up e
set $right i

# Terminal
set $term alacritty

# Monitors
set $mon1 DP-1
set $mon2 eDP-1

# Notification Daemon
exec_always swaync

# Toggle control center
bindsym $mod+y exec swaync-client -t -sw

# easyeffects sound manager
exec_always easyeffects com.github.wwmm.easyeffects --gapplication-service

# menu
set $menu "~/bin/startmenu"
set $launcher "~/bin/launcher"

# weather and calendar on desktop
exec_always ~/bin/weather &

#
### Output configuration
#
output * bg ~/Downloads/mountains-1412683.svg fill
#
# Displays
#
# output $mon1 {
#   resolution 3840x2160 position 0,0
# }

# gaming rez until I can build my own system.
output $mon1 {
  resolution 1920x1080 position 0,0
}

output $mon2 disable {
# output $mon1 {
  resolution 1920x1080 position 3840,1080
}


#
### Idle configuration
#
exec swayidle -w \
         timeout 275 'notify-send "Inhibitor" "Screen Off in 15 Sec"'\
         timeout 15 'swaylock-fancy -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock-fancy -f -c 000000'


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+x kill

    # Start your launcher
    bindsym $mod+semicolon  exec $menu
    bindsym $mod+u exec $launcher

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway
    bindsym $mod+q exec ~/bin/powermenu.sh

    # togggle bottom bar
    bindsym $mod+z exec ~/bin/bartoggle

    # printscreen tools
    set $snippet Snippet: (s) save, (c) copy
    set $snippet_save Save: (a) area, (s) screen, (w) window, (o) output
    set $snippet_copy Copy: (a) area, (s) screen, (w) window, (o) output
    bindsym Print mode "$snippet"
mode "$snippet" {
        bindsym s mode "$snippet_save"
        bindsym c mode "$snippet_copy"

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
        bindsym Control+g mode "default"
    }

mode "$snippet_save" {
     bindsym a exec /usr/share/sway/scripts/grimshot --notify save area ; mode "default"
     bindsym s exec /usr/share/sway/scripts/grimshot --notify save screen ; mode "default"
     bindsym w exec /usr/share/sway/scripts/grimshot --notify save window ; mode "default"
     bindsym o exec /usr/share/sway/scripts/grimshot --notify save output ; mode "default"

     bindsym Return mode "default"
     bindsym Escape mode "default"
     bindsym q mode "default"
     bindsym Control+g mode "default"
}

mode "$snippet_copy" {
     bindsym a exec /usr/share/sway/scripts/grimshot --notify copy area ; mode "default"
     bindsym s exec /usr/share/sway/scripts/grimshot --notify copy screen ; mode "default"
     bindsym w exec /usr/share/sway/scripts/grimshot --notify copy window ; mode "default"
     bindsym o exec /usr/share/sway/scripts/grimshot --notify copy output ; mode "default"

     bindsym Return mode "default"
     bindsym Escape mode "default"
     bindsym q mode "default"
     bindsym Control+g mode "default"
}

    # left eye candy bar
    bindsym $mod+l exec ~/bin/eww_left
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+r layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+b floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # keep window when switching
    bindsym $mod+Shift+s sticky toggle
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+g move scratchpad; sticky enable

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+g scratchpad show
#
# Resizing containers:
#
bindsym $mod+w mode "resize"
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
#
# launching stuff
#
bindsym $mod+F1 mode "Launch"
mode "Launch" {
        bindsym a exec $menu; mode "default"
        bindsym d exec --no-startup-id xdg-open ~/ ; mode "default"
        bindsym w exec --no-startup-id microsoft-edge-beta; mode "default"
        bindsym s exec --no-startup-id spotify; mode "default"
        bindsym c exec --no-startup-id discord; mode "default"
        bindsym p exec ~/bin/volume; mode "default"

        # emacs things
        bindsym t exec --no-startup-id emacsclient -n -a "emacs" --eval '(emacs-agenda)' ; mode "default"
        bindsym n exec --no-startup-id emacsclient -c -n -a "emacs" ; mode "default"
        bindsym Space exec --no-startup-id emacsclient -c -a "emacs" --eval '(multi-vterm)' ; mode "default"
        bindsym r exec --no-startup-id "emacsclient -u -e '(org-roam-ui-mode t)' & microsoft-edge-beta -app=http://localhost:35901/" ; mode "default"

        # files
        bindsym 6 exec --no-startup-id emacsclient -c -a "emacs" ~/.dotfiles/Emacs.org; mode "default"
        bindsym 7 exec --no-startup-id emacsclient -c -a "emacs" ~/.config/sway/config; mode "default"
        bindsym 8 exec --no-startup-id emacsclient -c -a "emacs" ~/.dotfiles/README.org; mode "default"

        # make other modes still work
        bindsym o mode "mode_opacity"
        bindsym g mode "$mode_gaps"

        # exit
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
        bindsym Control+g mode "default"
        bindsym $mod+F1 mode "default"
}

#
# Colours and style
#
default_border pixel 6
font Cozette 18
title_align center
#class                      border       backgr     text        indicator     childborder
client.focused              #c678dd     #c678dd     #282c34     #a9a1e1         #c678dd
client.focused_inactive     #282c34     #282c34     #bbc2cf     #a9a1e1         #282c34
client.unfocused            #282c34     #282c34     #bbc2cf     #a9a1e1         #282c34
client.urgent               #e74c3c     #e74c3c     #bbc2cf     #a9a1e1         #ff6c6b
client.placeholder          #c678dd     #c678dd     #bbc2cf     #a9a1e1         #282c34
client.background           n/a         #c678dd     n/a
#
# Auto start
#

for_window [title="^Edge$"] move to workspace 2
assign [class="Spotify"] 9
assign [class="discord"] 3
assign [class="Messages"] 3

exec waybar
exec emacs --daemon
exec discord
exec swaymsg 'workspace 9;exec spotify'
exec swaymsg 'workspace 2;exec microsoft-edge-beta'
exec /opt/Messages/Messages

for_window [urgent="latest"] focus
for_window [title="ORUI"] opacity .9
for_window [class="Messages"] opacity .9
for_window [class="discord"] opacity .9
for_window [class="Spotify"] opacity .9
for_window [title="emacs-run-launcher"] floating enabled
for_window [title="emacs-agenda"] floating enabled
for_window [app_id="floating"] floating enabled
for_window [title="EasyEffects"] floating enabled; move position 2514 989; resize set 1002 1042

#
# gaps!
#
# Press $mod+Control+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
gaps inner 24
gaps outer 24

set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Control+g mode "$mode_gaps"
mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+o mode "mode_opacity"
mode "mode_opacity" {
        bindsym n opacity plus .05
        bindsym e opacity minus .05

        bindsym m opacity .93
        bindsym i opacity 1

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
        bindsym Control+g mode "default"
        bindsym o mode "default"
}

#
# sys keys
#
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -c 0 -q set Master 2dB+ unmute
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -c 0 -q set Master 2db- unmute
bindsym XF86AudioMute exec --no-startup-id amixer -q set Master toggle

# touchpad on and off controller on laptop with Fn+<touchpad control functional key>
# bindsym XF86TouchpadOn exec --no-startup-id synclient Touchpadoff=0
# bindsym XF86TouchpadOff exec --no-startup-id synclient Touchpadoff=1

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause -p spotify
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous



include /etc/sway/config.d/*
