#!/bin/bash
set -e

# Define the counter file
COUNTER_FILE=/tmp/.eww_script_counter

# Check if the counter file doesn't exist or is empty, then initialize the counter to 1
if [ ! -f "$COUNTER_FILE" ] || [ ! -s "$COUNTER_FILE" ]; then
    echo 1 > $COUNTER_FILE
fi


# Check how any monitors
json_output=$(hyprctl monitors -j)
monitors_length=$(echo "$json_output" | jaq '. | length')


# Read the current counter value or use first arg
COUNTER=${1:-$(cat $COUNTER_FILE)}

# Based on the counter value, decide which command to run
if [ $COUNTER -eq 1 ]; then
	if ! pgrep -x "hyprshell" > /dev/null; then
		echo "Starting Hyprshell daemon..."
		hyprshell daemon >/dev/null 2>&1 &
	else
		echo "Hyprshell is already running."
	fi


	if pgrep -x "eww" | wc -l | grep -q "^[2-9]"; then
		echo "More than one instance of Eww is already running."
		pkill eww
		echo "Starting Eww daemon..."
		eww daemon
	elif pgrep -x "eww" > /dev/null; then
		echo "Eww is already running."
	else
		echo "Starting Eww daemon..."
		eww daemon
	fi


    if command -v swaync-client &> /dev/null; then
        swaync-client -df
    fi
    if command -v hyprctl &> /dev/null; then
        hyprctl reload
    fi
    # hyprctl plugin load /usr/lib/hyprland-plugins/hyprbars.so
    eww open-many bar leftbar leftbarapps corner-ul corner-ur corner-bl corner-br
	if [ "$monitors_length" -gt 1 ]; then
		eww open-many bar2 leftbar2 leftbar2apps corner2-ul corner2-ur corner2-bl corner2-br
	fi
elif [ $COUNTER -eq 2 ]; then
    hyprctl --batch "keyword animations:enabled 0;\
            keyword decoration:drop_shadow 0;\
            keyword general:gaps_in 0;\
            keyword general:gaps_out 0;\
            keyword decoration:rounding 0;\
            keyword decoration:active_opacity 1;\
            keyword decoration:inactive_opacity 1;\
			keyword dwindle:no_gaps_when_only 1;\
            "
    # hyprctl plugin unload /usr/lib/hyprland-plugins/hyprbars.so
	set +e
    eww close corner-ul corner-ur corner-bl corner-br
	if [ "$monitors_length" -gt 1 ]; then
		eww close corner2-ul corner2-ur corner2-bl corner2-br
	fi
	set -e
elif [ $COUNTER -eq 3 ]; then
    if command -v swaync-client &> /dev/null; then
		swaync-client -dn
    fi
    eww close-all
fi

# Increment the counter, and if it's 4, reset it back to 1
if [ $COUNTER -eq 3 ]; then
    COUNTER=1
else
    COUNTER=$((COUNTER + 1))
fi

# Write the updated counter value back to the file
echo $COUNTER > $COUNTER_FILE

