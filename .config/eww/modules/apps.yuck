(defwidget notif-toggle []
  (button
	:class "systray-bottom"
	:onclick "sleep .15; swaync-client -t"
	:onrightclick "swaync-client -d"
	{notif.Icon}))


(defwidget app-launcher []
  (box
	:orientation "v"
	:space-evenly false
	:width 48
	(box
	  :space-evenly false
	  (box
		:class "app"
		:width 48
		:height 48
		(button
		  :class "launch"
		  :onclick "nwggrid -client")))
	(box
	  :space-evenly false
	  (box
		:width 54
		:class "apps"
		(box
		  :halign "center"
		  :width 40
		  :height 10
		  :class "divider")))))

(defwidget showapps [applist icon revealid show]
  (revealer
	:transition "slidedown"
	:reveal {"${app_rev}" == "${revealid}"  ? show : false}
	:duration "350ms"
	(box
	  :class "apps-list"
	  :valign "center"
	  :orientation "v"
	  :spacing 4
	  (for a in applist
		(button
		  :class {a.Focused ? "app-icon app-focused": "app-icon"}
		  :height 44
		  :width 44
		  :tooltip "${a.Class}: ${a.Title}"
		  :onclick "hyprctl dispatch focuswindow address:${a.Address}"
		  :onmiddleclick "hyprctl dispatch closewindow address:${a.Address}"
		  :style "background-image: url('${icon}');")))))

(defwidget apps-tray []
  (box
    :class "apps-sidebar"
    :orientation "v"
    :width 48
	:space-evenly false
    (box
      :orientation "v"
      :vexpand true
      :space-evenly false
      :width 48
      :valign "center"
      (for appList in apps
        (eventbox
          :onhover "${EWW_CMD} update app_rev=${appList.ID}"
          :onhoverlost "${EWW_CMD} update app_rev=-1"
          :hexpand false
          :width 48
          (box
			:orientation "v"
            :space-evenly false
            :hexpand false
            :halign "start"
            :width 48
            (box
			  :class "app"
			  :space-evenly false
			  (box
                :valign "center"
                :height {appList.Focused ? 24 :4}
                :width 7
                :class {appList.Focused ? "app-active-bar" : "app-dot" }
                :class {appList.LastFocused == "" ? "app-no-dot" : "app-dot"})
              (box
				(button
                  :class "app-icon"
                  :height 44
                  :width 44
                  :onrightclick "gtk-launch ${appList.Desktop}"
                  :onmiddleclick "hyprctl dispatch closewindow address:${appList.LastFocused}"
                  :onclick "hyprctl dispatch focuswindow address:${appList.LastFocused}"
                  :style "background-image: url('${appList.Icon}');")))
			(showapps
			  :applist "${appList.Apps}"
			  :icon "${appList.Icon}"
			  :revealid "${appList.ID}"
			  :show {arraylength(appList.Apps) > 1 ? true : false}
			  )))))))

(defwidget lbar []
  (centerbox
	:class "sidebar"
	:orientation "v"
	(box
	  :class "ws-box"
	  :vexpand true
	  :valign "center"
	  :space-evenly false
	  (workspaces))
	(box) ;; center
	(box
	  :orientation "v"
	  :valign "end"
	  :vexpand true
	  :space-evenly false
	  :width 48
	  (box
		:orientation "v"
		:space-evenly false
		(box
		  :space-evenly false
		  (box
			:height 25
			:width 54
			:class "apps-b"
			(box
			  :class "apps-tl")))
		(box
		  :space-evenly false
		  (box
			:height 25
			:width 54
			:class "apps-tr"))
		(app-launcher)
		(apps-tray)
		(box
		  :space-evenly false
		  (box
			:height 25
			:width 54
			:class "systray-b"
			(box :class "systray-top")))
		(box
		  :hexpand false
		  :width 48
		  :orientation "h"
		  (box
			:orientation "v"
			:class "systray-tr"
			:hexpand false
			:width 48
			:space-evenly false
			(systray
			  :vexpand "false"
			  :class "systray"
			  :orientation "v")
			(notif-toggle)))))))

